From 8c3cb27999de30afd71511f033f7ac9f9899ed1f Mon Sep 17 00:00:00 2001
From: Marcos Paulo de Souza <marcos.mage@gmail.com>
Date: Sat, 4 Feb 2012 22:26:13 +0100
Subject: PM / Suspend: Avoid code duplication in suspend statistics update

The code
       if (error) {
               suspend_stats.fail++;
               dpm_save_failed_errno(error);
       } else
               suspend_stats.success++;

Appears in the kernel/power/main.c and kernel/power/suspend.c.

This patch just creates a new function to avoid duplicated code.

Suggested-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
Signed-off-by: Marcos Paulo de Souza <marcos.mage@gmail.com>
Acked-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
(cherry picked from commit 8916e3702ec422b57cc549fbae3986106292100f)

Signed-off-by: Simon Horman <horms@verge.net.au>
---
 include/linux/suspend.h |   16 ++++++++++++++++
 kernel/power/main.c     |    6 +-----
 kernel/power/suspend.c  |    6 +-----
 3 files changed, 18 insertions(+), 10 deletions(-)

diff --git a/include/linux/suspend.h b/include/linux/suspend.h
index 43f0421..ec59fb0 100644
--- a/include/linux/suspend.h
+++ b/include/linux/suspend.h
@@ -94,6 +94,22 @@ static inline void dpm_save_failed_step(enum suspend_stat_step step)
 }
 
 /**
+ * suspend_stats_update - Update success/failure statistics of suspend-to-ram
+ *
+ * @error: Value returned by enter_state() function
+ */
+static inline void suspend_stats_update(int error)
+{
+	if (error) {
+		suspend_stats.fail++;
+		dpm_save_failed_errno(error);
+	} else {
+		suspend_stats.success++;
+	}
+}
+
+
+/**
  * struct platform_suspend_ops - Callbacks for managing platform dependent
  *	system sleep states.
  *
diff --git a/kernel/power/main.c b/kernel/power/main.c
index 8c5014a..b1e3248 100644
--- a/kernel/power/main.c
+++ b/kernel/power/main.c
@@ -296,11 +296,7 @@ static ssize_t state_store(struct kobject *kobj, struct kobj_attribute *attr,
 	}
 	if (state < PM_SUSPEND_MAX && *s) {
 		error = enter_state(state);
-		if (error) {
-			suspend_stats.fail++;
-			dpm_save_failed_errno(error);
-		} else
-			suspend_stats.success++;
+		suspend_stats_update(error);
 	}
 #endif
 
diff --git a/kernel/power/suspend.c b/kernel/power/suspend.c
index 560a639..03bc92b 100644
--- a/kernel/power/suspend.c
+++ b/kernel/power/suspend.c
@@ -321,11 +321,7 @@ int pm_suspend(suspend_state_t state)
 	int ret;
 	if (state > PM_SUSPEND_ON && state < PM_SUSPEND_MAX) {
 		ret = enter_state(state);
-		if (ret) {
-			suspend_stats.fail++;
-			dpm_save_failed_errno(ret);
-		} else
-			suspend_stats.success++;
+		suspend_stats_update(ret);
 		return ret;
 	}
 	return -EINVAL;
-- 
1.7.10.1.362.g242cab3

